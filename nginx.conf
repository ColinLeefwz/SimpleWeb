# ln -s /mnt/lianlian/nginx.conf /etc/nginx/nginx.conf

# see http://unicorn.bogomips.org/examples/nginx.conf
worker_processes 4;

user lian lian; # for systems with a "nogroup"

# Feel free to change all paths to suite your needs here, of course
#pid /home/dooo/nginx-1.2.3/build/nginx.pid;
#error_log /home/dooo/nginx-1.2.3/build/nginx.error.log;

events {
  worker_connections 19000; # increase if you have lots of clients
  accept_mutex on; # "on" if nginx worker_processes > 1
}

worker_rlimit_nofile    20000;  #each connection needs a filehandle (or 2 if you are proxying)

#keepalive_timeout  30;  #that' another key - close live connections as early as possible or disable them completely

#total amount of users you can serve in 1 second = worker_processes*worker_connections/keepalive_timeout

http {
  include mime.types;
  default_type application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" $request_time';

  access_log  /var/log/nginx/http-access.log  main;
  sendfile on;
  tcp_nopush on; # off may be better for *some* Comet/long-poll stuff
  tcp_nodelay off; # on may be better for some Comet/long-poll stuff
  fastcgi_buffers 8 16k;
  fastcgi_buffer_size 32k;

  gzip on;
  gzip_http_version 1.0;
  gzip_proxied any;
  gzip_min_length 500;
  gzip_disable "MSIE [1-6]\.";
  gzip_types text/plain text/xml text/css
             text/comma-separated-values
             text/javascript application/x-javascript application/json
             application/atom+xml;

  # this can be any application server, not just Unicorn/Rainbows!
  upstream dface_server {
    server unix:/tmp/unicorn.sock fail_timeout=0;
    # server 127.0.0.1:8082 fail_timeout=0;
    # server 192.168.0.8:8080 fail_timeout=0;
  }

  upstream caitu_server {
    #server unix:/tmp/caitu_puma.sock fail_timeout=0;
	server unix:///mnt/caitu/log/puma.sock fail_timeout=0;
    #server 127.0.0.1:9292 fail_timeout=0;
  }

  upstream mweb_server {
  	server unix:///mnt/mweb/log/puma.sock fail_timeout=0;
    #server 127.0.0.1:9393 fail_timeout=0;
  }

  upstream game_server {
  	server unix:///mnt/game/log/puma.sock fail_timeout=0;
    #server 127.0.0.1:9393 fail_timeout=0;
  }
    
  server {
    listen 80 default_server; # for Linux
    listen               443  ssl;
    ssl_certificate /mnt/test.pem;
    ssl_certificate_key /mnt/test.pem;

    #client_max_body_size 4G;
    server_name www.dface.cn;
    access_log  /var/log/nginx/www.access.log  main;
	
    keepalive_timeout 5;
    root /mnt/lianlian/public;
	
    rewrite ^/api/(.*) /$1 break;

    try_files $uri/index.html $uri.html $uri @dface;

    location @dface {
      # an HTTP header important enough to have its own Wikipedia entry:
      #   http://en.wikipedia.org/wiki/X-Forwarded-For
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	  proxy_set_header X-Real-IP       $remote_addr;    
	  
      # pass the Host: header from the client right along so redirects
      # can be set properly within the Rack application
      proxy_set_header Host $http_host;
      proxy_buffering    on;
	  
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://dface_server;
    }
	
	location ^~ /2/statuses/user_timeline.json {
	  rewrite ^/2/statuses/user_timeline.json(.*) /2/statuses/user_timeline.json?access_token=2.00t9e5PCMcnDPC86e7068cc9yxaMRC$1  break;
	  proxy_pass https://api.weibo.com/;
	}
	
    location ^~ /admin_login {
      rewrite ^/admin_login(.*) https://admin.dface.cn permanent;
    }

    location ^~ /shop_login {
      rewrite ^/shop_login(.*) http://shop.dface.cn permanent;
    }
	
    # Rails error pages
    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /mnt/lianlian/public;
    }
  }


    server {
      listen 80; 
      listen               443  ssl;
      ssl_certificate /mnt/test.pem;
      ssl_certificate_key /mnt/test.pem;

      #client_max_body_size 4G;
      server_name shop.dface.cn;
      access_log  /var/log/nginx/shop.access.log  main;
      keepalive_timeout 5;
      root /mnt/lianlian/public;

      try_files $uri/index.html $uri.html $uri @dface;

      location @dface {
        # an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Real-IP       $remote_addr;  
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://dface_server;
      }
	  
	
      location = / {
        rewrite ^/ /shop_login/login  break;
        proxy_pass http://dface_server/;
      }
	  
      # Rails error pages
      error_page 500 502 503 504 /500.html;
      location = /500.html {
        root /mnt/lianlian/public;
      }
    }



  server {
      listen 80;

      #client_max_body_size 4G;
      server_name caitu.dface.cn;
      access_log  /var/log/nginx/caitu.access.log  main;
      keepalive_timeout 5;
      root /mnt/caitu/public;

      try_files $uri/index.html $uri.html $uri @dface;

      location @dface {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://caitu_server;
      }


      location = / {
        proxy_pass http://caitu_server/;
      }

      # Rails error pages
      error_page 500 502 503 504 /500.html;
      location = /500.html {
        root /mnt/caitu/public;
      }
    }
	
  server {
      listen 80;

      #client_max_body_size 4G;
      server_name game.dface.cn;
      access_log  /var/log/nginx/game.access.log  main;
      keepalive_timeout 5;
      root /mnt/game/public;

      try_files $uri/index.html $uri.html $uri @dface;

      location @dface {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://game_server;
      }


      location = / {
        proxy_pass http://game_server/;
      }

      # Rails error pages
      error_page 500 502 503 504 /500.html;
      location = /500.html {
        root /mnt/game/public;
      }
    }	

  server {
      listen 80;

      #client_max_body_size 4G;
      server_name w.dface.cn;
      access_log  /var/log/nginx/mweb.access.log  main;
      keepalive_timeout 5;
      root /mnt/mweb/public;

      try_files $uri/index.html $uri.html $uri @dface;

      location @dface {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://mweb_server;
      }

      location = / {
        proxy_pass http://mweb_server/;
      }

      # Rails error pages
      error_page 500 502 503 504 /500.html;
      location = /500.html {
        root /mnt/mweb/public;
      }
    }
	
	server {
	       listen         80;
	       server_name    admin.dface.cn;
	              client_max_body_size 15m;
	       rewrite        ^ https://$server_name$request_uri? permanent;
	}
	
    server {
      listen               443  ssl;
      ssl_certificate /mnt/test.pem;
      ssl_certificate_key /mnt/test.pem;

      #client_max_body_size 4G;
      client_max_body_size 15m;
      server_name admin.dface.cn;
      access_log  /var/log/nginx/admin.access.log  main;
      keepalive_timeout 5;
      root /mnt/lianlian/public;

      try_files $uri/index.html $uri.html $uri @dface;

      location @dface {
        # an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Real-IP       $remote_addr;    
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://dface_server;
      }
	  
	
      location = / {
        rewrite ^/ /admin_login/login  break;
        proxy_pass http://dface_server/;
      }
	  
      # Rails error pages
      error_page 500 502 503 504 /500.html;
      location = /500.html {
        root /mnt/lianlian/public;
      }
    }

}

