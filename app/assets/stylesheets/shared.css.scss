@import "globals/variables";

.video-wrapper{
  width: 320px;
  height: 180px;
  margin: 0 auto;
}

#tip-modal {
  .modal-dialog {
    width: 60%;
    height: 60%;
  }
  .modal-content {
    background-image: url(image-path('forbidden city.jpg'));
    background-repeat: no-repeat;
    color: white;
    background-size: cover;
    background-position: center;
    height: 100%;

    .rounded-box {
      height: 100%;

      background-color: rgba(0,0,0,0.5);
      .modal-body {
        height: 100%;
        font-weight: bold;
        font-size: 20px;

        h1 {
          margin-bottom: 40px;
        }

        .form-group {
          margin-top: 150px;

          input {
            margin-bottom: 10px;
          }
        }

        a {
          color: $prodygia-light-purple;
        }
      }
    }
  }
}

.nav-sidebar {
  .form-group {
    margin-left: 20px;
    margin-bottom: 5px;
  }
}

.button{
  clear: both;
  cursor: pointer;
  font-family: Latobold;
  text-align: center;
  padding: 0.3em;
  color: white;
  a:hover{
    color: white;
    text-decoration: none;
  }
}

.subscribe{
  background-color: #8a2649;
}

.subscribed{
  background-color: #5A268A;
}

.general-wrapper{
  width: 79%;
  min-width: 300px;
  margin: 0 auto;
}

// add "center-container" to an element, then you can use "vertical-align: middle" to any of its inline child element
// "vertical-align" only works with table element or inline text/image element by default
//todo: gecko: remove it someday, we have center_container() mixin
.center-container:before{
  content: '';
  height: 100%;
  display: inline-block;
  vertical-align: middle;
  margin-right: -0.25em;
}

// add "inline" class to a div, then it will be displayed as "inline-block"
// bootstrap deals with other elements with "inline", like .ul-inline, .checkbox-inline
.inline{
  display: inline-block;
}

.hidden{
  display: none;
}


//todo: gecko: remove it someday, we have separator() mixin
.separator:after{
  content: " | "
}
// simple way for file input not displaying "no file chosen"
input[type="file"]{
  // width: 92px;
}

.margin-bottom{
  margin-bottom: 5rem;
}

.shadow {
  box-shadow: $shadow_param;
}

.hollow-star{
  cursor: pointer;
}
.solid-star{
  cursor: pointer;
}

.shared-links{
  max-width: 280px;
}

.float-image{
  float: right;
  width: 50%;
}

.article-content{
  padding: 20px;
}

.display-block{
  display: block;
}

// overrider bootstrap's btn-prodygia class
.btn-prodygia{
  color: #ffffff;
  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
  background-color: $prodygia-purple;
  *background-color: $prodygia-light-purple;
  background-image: -moz-linear-gradient(top, $prodygia-light-purple, $prodygia-purple);
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from($prodygia-light-purple), to($prodygia-purple));
  background-image: -webkit-linear-gradient(top, $prodygia-light-purple, $prodygia-purple);
  background-image: -o-linear-gradient(top, $prodygia-light-purple, $prodygia-purple);
  background-image: linear-gradient(to bottom, $prodygia-light-purple, $prodygia-purple);
  background-repeat: repeat-x;
  border-color: #0044cc #0044cc #002a80;
  border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff0088cc', endColorstr='#ff0044cc', GradientType=0);
  filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);

}

.btn-prodygia:hover,
.btn-prodygia:focus,
.btn-prodygia:active,
.btn-prodygia.active,
.btn-prodygia.disabled,
.btn-prodygia[disabled] {
  color: #ffffff;
  background-color: $prodygia-light-purple;
  *background-color: $prodygia-purple;
}

.btn-prodygia:active,
.btn-prodygia.active {
  background-color: #003399 \9;
}
img {
  max-width: 100%;
}

